<html DIR="LTR" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
  <head>
    <META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=utf-8" />
    <META NAME="save" CONTENT="history" />
    <title>AEVENTS( ) Function</title>
    
    <link rel="stylesheet" type="text/css" href="../local/Classic.css">
      
    </link>
    
    <script src="../local/EventUtilities.js">
      
    </script>
    <script src="../local/SplitScreen.js">
      
    </script>
    <script src="../local/Dropdown.js">
      
    </script>
    <script src="../local/script.js">
      
    </script>
  </head>
  <body>
    <input type="hidden" id="userDataCache" class="userDataStyle">
    </input>
    <input type="hidden" id="hiddenScrollOffset">
    </input>
    <img id="dropDownImage" style="display:none; height:0; width:0;" alt="Filter choices image" src="../local/drpdown.gif">
      
      
    </img>
    <img id="dropDownHoverImage" style="display:none; height:0; width:0;" alt="DropDownHover image" src="../local/drpdown_orange.gif">
      
      
    </img>
    <img id="collapseImage" style="display:none; height:0; width:0;" alt="Collapse image" src="../local/collapse_all.gif">
      
      
    </img>
    <img id="expandImage" style="display:none; height:0; width:0;" alt="Expand image" src="../local/expand_all.gif">
      
      
    </img>
    <img id="collapseAllImage" style="display:none; height:0; width:0;" alt="CollapseAll image" src="../local/collall.gif">
      
      
    </img>
    <img id="expandAllImage" style="display:none; height:0; width:0;" alt="ExpandAll image" src="../local/expall.gif">
      
      
    </img>
    <img id="copyImage" style="display:none; height:0; width:0;" alt="Copy image" src="../local/copycode.gif">
      
      
    </img>
    <img id="copyHoverImage" style="display:none; height:0; width:0;" alt="CopyHover image" src="../local/copycodeHighlight.gif">
      
      
    </img>
    <div id="header">
      <table width="100%" id="topTable">
        <tr id="headerTableRow1">
          <td align="left">
            <span id="runningHeaderText">
              Visual FoxPro 9.0 SP2
            </span>
          </td>
        </tr>
        <tr id="headerTableRow2">
          <td align="left">
            <span id="nsrTitle">AEVENTS( ) Function</span>
          </td>
        </tr>
        <tr id="headerTableRow3">
          <td>
            <a href="#seeAlsoToggle" onclick="OpenSection(seeAlsoToggle)">See Also</a> 
									<a href="#codeExampleToggle" onclick="OpenSection(codeExampleToggle)">Example</a></td>
        </tr>
      </table>
      <table width="100%" id="bottomTable" cellspacing="0" cellpadding="0">
        <tr>
          <td>
            <span onclick="ExpandCollapseAll(toggleAllImage)" style="cursor:default;" onkeypress="ExpandCollapseAll_CheckKey(toggleAllImage)" tabindex="0">
              <img ID="toggleAllImage" class="toggleAll" alt="CollapseAll image" src="../local/collall.gif">
                
                
              </img>
              <label id="collapseAllLabel" for="toggleAllImage" style="display: none;">
                Collapse All
              </label>
              <label id="expandAllLabel" for="toggleAllImage" style="display: none;">
                Expand All
              </label> </span>
            <!-- VFPX languageFilterToolTip removed -->
          </td>
        </tr>
      </table>
      <!-- VFPX languageSpan removed-->
    </div>
    <div id="mainSection">
      <div id="mainBody">
        <div id="allHistory" class="saveHistory" onsave="saveAll()" onload="loadAll()">
        </div>
        <font color="DarkGray"></font><p />
    <p>You can use the <b>AEVENTS( )</b> function to retrieve the number of existing event bindings.</p>
  <div id="syntaxSection" class="section"><div id="syntaxCodeBlocks" class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th align="left"></th></tr><tr><td><pre>
AEVENTS( <span class="parameter">ArrayName</span> [, 0 | 1 | o<span class="parameter">EventObject </span>] )</pre></td></tr></table></span></div></div><p /><h4 class="subHeading">Parameters</h4>
    
      <dl><dt><span class="nonLinkTerms">
          <span class="parameter">ArrayName</span>
        </span></dt><dd>
          <p>Specifies the name of the array that contains the results of <b>AEVENTS( )</b>. </p>
        </dd></dl><dl><dt><span class="nonLinkTerms">0 </span></dt><dd>
          <p>Specifies that <b>AEVENTS( )</b> returns a three-element array containing an object reference to the current event source, the name of the triggered event, and how the event was triggered.</p>
          <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
                <th>
                  
                    <b>Column</b>
                  
                </th>
                <th>
                  
                    <b>Description</b>
                  
                </th>
                <th>
                  
                    <b>Type</b>
                  
                </th>
              </tr><tr>
              <td>
                <p>1</p>
              </td>
              <td>
                <p>Event source</p>
              </td>
              <td>
                <p>Object reference</p>
              </td>
            </tr><tr>
              <td>
                <p>2</p>
              </td>
              <td>
                <p>Event</p>
              </td>
              <td>
                <p>String</p>
              </td>
            </tr><tr>
              <td>
                <p>3</p>
              </td>
              <td>
                <p>Event type, or how event was raised.</p>
              </td>
              <td>
                <p>0 - System</p>
                <p>1 - RAISEEVENT( ) function</p>
                <p>2 - Method call</p>
              </td>
            </tr></table></div>
          <p>The third array element indicates how an event was triggered. If the event is a property, this value can be 1 or 2. The value is 2 if the property is set or assigned. </p>
        </dd></dl><dl><dt><span class="nonLinkTerms">1</span></dt><dd>
          <p>Specifies that <b>AEVENTS( )</b> returns a four-column array containing information about Windows Message (Win Msg) events.</p>
          <p>The array contains one row for each binding. Bindings are created with the <span class="linkTerms"><a href="/html/e0aaf535-c606-44bd-b7c1-7d0341331d8f.htm">BINDEVENT( ) Function</a></span>.</p>
          <p>The following table describes the contents of each column in the array.</p>
          <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
                <th>
                  
                    <b>Column</b>
                  
                </th>
                <th>
                  
                    <b>Description</b>
                  
                </th>
                <th>
                  
                    <b>Type</b>
                  
                </th>
              </tr><tr>
              <td>
                <p>1</p>
              </td>
              <td>
                <p>hWnd</p>
              </td>
              <td>
                <p>Integer</p>
              </td>
            </tr><tr>
              <td>
                <p>2</p>
              </td>
              <td>
                <p>Window Message</p>
              </td>
              <td>
                <p>Integer</p>
              </td>
            </tr><tr>
              <td>
                <p>3</p>
              </td>
              <td>
                <p>Reference of handler</p>
              </td>
              <td>
                <p>Object reference</p>
              </td>
            </tr><tr>
              <td>
                <p>4</p>
              </td>
              <td>
                <p>Handler delegate</p>
              </td>
              <td>
                <p>String</p>
              </td>
            </tr></table></div>
          <p>
          </p>
        </dd></dl><dl><dt><span class="nonLinkTerms">
          <span class="parameter">oEventObject</span>
        </span></dt><dd>
          <p>Specifies an object reference. If you specify an object reference, <b>AEVENTS( )</b> returns a five-column array that contains the events raised and the delegate methods for <span class="parameter">oEventObject</span>. Each row in <span class="parameter">ArrayName</span> represents a binding. The following table describes the information in each of the five columns.</p>
          <div class="labelheading"><b></b></div><div class="tableSection"><table width="100%" cellspacing="2" cellpadding="5"><tr>
                <th>
                  
                    <b>Column</b>
                  
                </th>
                <th>
                  
                    <b>Description</b>
                  
                </th>
                <th>
                  
                    <b>Type</b>
                  
                </th>
              </tr><tr>
              <td>
                <p>1</p>
              </td>
              <td>
                <p>.T. if second element is the event source</p>
                <p>.F. if second element is the event handler</p>
              </td>
              <td>
                <p>Logical</p>
              </td>
            </tr><tr>
              <td>
                <p>2</p>
              </td>
              <td>
                <p>Event source if you pass the event handler to <span class="parameter">oEventObject</span>; otherwise, event handler if you pass the event source to <span class="parameter">oEventObject</span>.</p>
              </td>
              <td>
                <p>Object reference</p>
              </td>
            </tr><tr>
              <td>
                <p>3</p>
              </td>
              <td>
                <p>Event</p>
              </td>
              <td>
                <p>String</p>
              </td>
            </tr><tr>
              <td>
                <p>4</p>
              </td>
              <td>
                <p>Delegate method</p>
              </td>
              <td>
                <p>String</p>
              </td>
            </tr><tr>
              <td>
                <p>5</p>
              </td>
              <td>
                <p>
                  <b>BINDEVENT( )</b> flags</p>
              </td>
              <td>
                <p>Integer</p>
              </td>
            </tr></table></div>
          <p>When you pass <span class="parameter">oEventObject</span>, the number of bindings returned by <b>AEVENTS( )</b> should equal the number of unbound events returned by the <b>UNBINDEVENTS( )</b> function when passing only the <span class="parameter">oEventObject</span> parameter. </p>
        </dd></dl>
    
  <h1 class="heading"><span onclick="ExpandCollapse(returnValueToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(returnValueToggle)" tabindex="0"><img id="returnValueToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Return Value</span></h1><div id="returnValueSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>Numeric. <b>AEVENTS( )</b> returns the number of rows in the specified array. Typically, the number represents the number of event bindings.</p>
       <p>If you call AEVENTS(ArrayName,0), then AEVENTS( ) returns
       <ul><li>3, if called via Eventbinding or
       </li><li>0, if the AEVENTS is called outside Eventbindung.
       </li></ul></p>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(remarksToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(remarksToggle)" tabindex="0"><img id="remarksToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Remarks</span></h1><div id="remarksSection" class="section" name="collapseableSection" style="display: none;">
    
      <p>If <b>AEVENTS( )</b> returns 0, and the array does not exist, Visual FoxPro does not create the array. Visual FoxPro changes or alters an existing array only if valid results are returned. The array remains unchanged under the following conditions:  </p>
      <ul><li>
          <p>No events exist. </p>
        </li><li>
          <p>You specify a value of 0 as the second parameter, and<b> AEVENTS( )</b> does not appear within an event or <span class="parameter">oEventObject</span> has no bindings.</p>
        </li></ul>
    
  </div><h1 class="heading"><span onclick="ExpandCollapse(codeExampleToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(codeExampleToggle)" tabindex="0"><img id="codeExampleToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>Example</span></h1><div id="codeExampleSection" class="section" name="collapseableSection" style="display: none;">
    <description xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5">
      
        <p xmlns="">The following example shows how to use <b>AEVENTS( )</b> to retrieve the number of existing event bindings. <b>BINDEVENTS( )</b> keeps the Class Browser positioned to the right side of the Visual FoxPro desktop, regardless of how the desktop is resized. For more information, see <a href="/html/e0aaf535-c606-44bd-b7c1-7d0341331d8f.htm">BINDEVENT( ) Function</a>.</p>
        <p xmlns="">
          <b>UNBINDEVENTS( )</b> detaches the <b>Resize</b> event of the <b>_SCREEN</b> system variable from the object, <code>oHandler</code>. <b>AEVENTS( )</b> returns the number of event bindings before <b>BINDEVENT( )</b> and after <b>UNBINDEVENTS( )</b> in an array called <code>myArray</code>:</p>
      
    </description>
    <div class="code"><span codeLanguage="other"><table width="100%" cellspacing="0" cellpadding="0"><tr><th> </th><th><span class="copyCode" onclick="CopyCode(this)" onkeypress="CopyCode_CheckKey(this)" onmouseover="ChangeCopyCodeIcon(this)" onmouseout="ChangeCopyCodeIcon(this)" tabindex="0"><img class="copyCodeImage" name="ccImage" align="absmiddle" alt="CopyCode image" src="../local/copycode.gif"></img>Copy Code</span></th></tr><tr><td colspan="2"><pre>PUBLIC oHandler
oHandler=NEWOBJECT("myhandler")
DO (_browser)
BINDEVENT(_SCREEN,"Resize",oHandler,"myresize")
AEVENTS(myArray,oHandler)
numRows=ALEN(myArray,1)
numCols=ALEN(myArray,2)
WAIT "Rows in array after binding: " + TRANSFORM(numRows) WINDOW AT 20,20
WAIT "Cols in array after binding: " + TRANSFORM(numCols) WINDOW AT 20,20
FOR count1 = 1 TO numRows
   FOR count2 = 1 TO numCols
      WAIT myArray[count1,count2] WINDOW AT 20,20
   ENDFOR
ENDFOR
* Comment the following line to see event binding persist.
UNBINDEVENTS(_SCREEN,"Resize",oHandler,"myresize")
AEVENTS(myArray,oHandler)
* Check if AEVENTS( ) created and populated new array.
IF VARTYPE(myArray) &lt;&gt; U
   * The following code does not execute if event is unbound because
   * AEVENT( ) does not create a new array if it returns 0. To execute
   * the following code and see the contents of the new array, uncomment
   * the UNBINDEVENTS( ) statement.
   numRows=ALEN(myArray,1)
   numCols=ALEN(myArray,2)
   WAIT "Rows in array after unbinding: " + TRANSFORM(numRows) ;
      WINDOW AT 20,20
   WAIT "Cols in array after unbinding: " + TRANSFORM(numCols) ;
      WINDOW AT 20,20
   FOR count1 = 1 TO numRows
      FOR count2 = 1 TO numCols
         WAIT myArray[count1,count2] WINDOW AT 20,20
      ENDFOR
   ENDFOR
ENDIF
DEFINE CLASS myhandler AS Session
   PROCEDURE myresize
   _obrowser.left = _SCREEN.Width - _obrowser.width
   RETURN
ENDDEFINE</pre></td></tr></table></span></div>
  </div><h1 class="heading"><span onclick="ExpandCollapse(seeAlsoToggle)" style="cursor:default;" onkeypress="ExpandCollapse_CheckKey(seeAlsoToggle)" tabindex="0"><img id="seeAlsoToggle" onload="OnLoadImage()" class="toggle" name="toggleSwitch" alt="Expand image" src="../local/expand_all.gif"></img>See Also</span></h1><div id="seeAlsoSection" class="section" name="collapseableSection" style="display: none;"><h4 class="subHeading">Tasks</h4><span class="linkTerms"><a href="/html/191ff51b-b302-4a91-b463-ef0a7ff98375.htm">Bind, Raise, Unbind, and Retrieve Events Sample</a></span><br /><h4 class="subHeading">Reference</h4><span class="linkTerms"><a href="/html/e0aaf535-c606-44bd-b7c1-7d0341331d8f.htm">BINDEVENT( ) Function</a></span><br /><span class="linkTerms"><a href="/html/b64acd53-4196-48ce-9ab3-8da9dc8ed49a.htm">UNBINDEVENTS( ) Function</a></span><br /><span class="linkTerms"><a href="/html/297f42e9-e402-4a4f-abad-15f180508f2a.htm">RAISEEVENT( ) Function</a></span><br /><span class="linkTerms"><a href="/html/95a36787-89ac-4e4f-ac50-60708ab61363.htm">SYS(2325) - WCLIENTWINDOW from Visual FoxPro WHANDLE</a></span><br /><span class="linkTerms"><a href="/html/06f2cee1-b3aa-4f81-a37c-2efcd611af41.htm">SYS(2326) - WHANDLE from a Window's hWnd</a></span><br /><span class="linkTerms"><a href="/html/f30fb98e-e1df-4e6b-bf9e-1ad506e06174.htm">SYS(2327) - Window's hWnd from Visual FoxPro WHANDLE</a></span><br /><h4 class="subHeading">Concepts</h4><span class="linkTerms"><a href="/html/d0d1eaf7-9399-4b84-a073-42239bdafdbb.htm">Event Binding for Visual FoxPro Objects</a></span><br /><h4 class="subHeading">Other Resources</h4><span class="linkTerms"><a href="/html/da6b864f-f7c6-43a3-8218-20d56c7a4764.htm">Functions</a></span><br /><br /></div></div>
      <div id="footer">
        <div class="footerLine">
          <img width="100%" height="3px" alt="Footer image" src="../local/footer.gif">
            
            
          </img>
        </div>
        <!-- VFPX Footer-->
<div>
<img src="../local/vfpXnote.gif" style="float: left; border:0; margin-right:8px;">Microsoft Visual FoxPro 9 SP2 Help file, VFPX Edition v1.08<br />
<a href="https://github.com/VFPX/HelpFile/issues" target="_blank">Send feedback</a> on this topic to the <a href="https://github.com/VFPX/HelpFile/" target="_blank">VFPX Help file project team</a>.<br />
2009-2022 Placed under <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">Creative Commons licensing</a> by Microsoft Corporation. 
<noscript><p class="vfpx" style="color:#FF0000">&nbsp;&nbsp;<b>Not all help features are available because JavaScript is disabled on this computer!</b></p></noscript>
</div>
<!-- VFPX Footer-->
      </div>
    </div>
  </body>
</html>
<OBJECT type="application/x-oleobject" classid="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
<param name="ALink Name" value="AEVENTS( ) Function">
<param name="ALink Name" value="AEVENTS">
</OBJECT>
